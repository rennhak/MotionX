/**
 * File: Media.h.cpp
 **/

/**
 *
 * __        ___    ____  _   _ ___ _   _  ____ 
 * \ \      / / \  |  _ \| \ | |_ _| \ | |/ ___|
 *  \ \ /\ / / _ \ | |_) |  \| || ||  \| | |  _ 
 *   \ V  V / ___ \|  _ <| |\  || || |\  | |_| |
 *    \_/\_/_/   \_\_| \_\_| \_|___|_| \_|\____|
 *
 * This file (Media.h.cpp) was Auto-generated by "Umbrello" the UML Modeller tool.
 * ( URL: http://uml.sourceforge.net/ )
 *
 * If you make changes and regenerate with Umbrello your changes *WILL* be lost.
 * Make sure you understand how MotionX works before you develop new interfaces.
 *
 * vim=ts:2
 *
 **/

/**
 *
 * (c) 2009, Copyright, Bjoern Rennhak, The University of Tokyo
 *
 * @file       Media.h.cpp
 * @author     Bjoern Rennhak
 * @since      Thu Jul 2 2009 01:42:46
 * @version    <%= version %>
 * @copyright  See COPYRIGHT file for details.
 *
 **/



#include "Media.h"

// Constructors/Destructors
//  

//  
// Methods
//  


// Accessor methods
//  


// Public static attribute accessor methods
//  


// Public attribute accessor methods
//  


/**
 * Set the value of m_name
 * @note { e.g. "Symphony Nr. III, D Minor" }
 * @param new_var the new value of m_name
 */
void Media::setName ( string new_var ) {
  m_name = new_var;
}

/**
 * Get the value of m_name
 * @note { e.g. "Symphony Nr. III, D Minor" }
 * @return the value of m_name
 */
string Media::getName ( ) {
  return m_name;
}

/**
 * Set the value of m_description
 * @note {e.g. "This is a musical piece by .... etc. etc."}
 * @param new_var the new value of m_description
 */
void Media::setDescription ( string new_var ) {
  m_description = new_var;
}

/**
 * Get the value of m_description
 * @note {e.g. "This is a musical piece by .... etc. etc."}
 * @return the value of m_description
 */
string Media::getDescription ( ) {
  return m_description;
}

/**
 * Set the value of m_filename
 * @note {e.g. "Music_01.mp3" }
 * @param new_var the new value of m_filename
 */
void Media::setFilename ( string new_var ) {
  m_filename = new_var;
}

/**
 * Get the value of m_filename
 * @note {e.g. "Music_01.mp3" }
 * @return the value of m_filename
 */
string Media::getFilename ( ) {
  return m_filename;
}

/**
 * Set the value of m_path
 * @note {e.g. "/my/location"}
 * @param new_var the new value of m_path
 */
void Media::setPath ( string new_var ) {
  m_path = new_var;
}

/**
 * Get the value of m_path
 * @note {e.g. "/my/location"}
 * @return the value of m_path
 */
string Media::getPath ( ) {
  return m_path;
}

/**
 * Set the value of m_data
 * @note {e.g. "Base64 encoded payload" }
 * @param new_var the new value of m_data
 */
void Media::setData ( string new_var ) {
  m_data = new_var;
}

/**
 * Get the value of m_data
 * @note {e.g. "Base64 encoded payload" }
 * @return the value of m_data
 */
string Media::getData ( ) {
  return m_data;
}

/**
 * Set the value of m_codec
 * @note {e.g. "MPEG Layer III"}
 * @param new_var the new value of m_codec
 */
void Media::setCodec ( string new_var ) {
  m_codec = new_var;
}

/**
 * Get the value of m_codec
 * @note {e.g. "MPEG Layer III"}
 * @return the value of m_codec
 */
string Media::getCodec ( ) {
  return m_codec;
}

// Protected static attribute accessor methods
//  


// Protected attribute accessor methods
//  


// Private static attribute accessor methods
//  


// Private attribute accessor methods
//  


// Other methods
//  


